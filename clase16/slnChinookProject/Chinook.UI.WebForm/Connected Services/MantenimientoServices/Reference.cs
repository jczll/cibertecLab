//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chinook.UI.WebForm.MantenimientoServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Chinook.Service.wcf")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Artist", Namespace="http://schemas.datacontract.org/2004/07/Chinook.Entities.Base")]
    [System.SerializableAttribute()]
    public partial class Artist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chinook.UI.WebForm.MantenimientoServices.Album[] AlbumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chinook.UI.WebForm.MantenimientoServices.Album[] Album {
            get {
                return this.AlbumField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumField, value) != true)) {
                    this.AlbumField = value;
                    this.RaisePropertyChanged("Album");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtistId {
            get {
                return this.ArtistIdField;
            }
            set {
                if ((this.ArtistIdField.Equals(value) != true)) {
                    this.ArtistIdField = value;
                    this.RaisePropertyChanged("ArtistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Album", Namespace="http://schemas.datacontract.org/2004/07/Chinook.Entities.Base")]
    [System.SerializableAttribute()]
    public partial class Album : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chinook.UI.WebForm.MantenimientoServices.Artist ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chinook.UI.WebForm.MantenimientoServices.Artist Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtistId {
            get {
                return this.ArtistIdField;
            }
            set {
                if ((this.ArtistIdField.Equals(value) != true)) {
                    this.ArtistIdField = value;
                    this.RaisePropertyChanged("ArtistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbunesVendidosQuery", Namespace="http://schemas.datacontract.org/2004/07/Chinook.Entities.Queries")]
    [System.SerializableAttribute()]
    public partial class AlbunesVendidosQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaylistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaylistName {
            get {
                return this.PlaylistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaylistNameField, value) != true)) {
                    this.PlaylistNameField = value;
                    this.RaisePropertyChanged("PlaylistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalQuantity {
            get {
                return this.TotalQuantityField;
            }
            set {
                if ((this.TotalQuantityField.Equals(value) != true)) {
                    this.TotalQuantityField = value;
                    this.RaisePropertyChanged("TotalQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackName {
            get {
                return this.TrackNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackNameField, value) != true)) {
                    this.TrackNameField = value;
                    this.RaisePropertyChanged("TrackName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TracksVendidosQuery", Namespace="http://schemas.datacontract.org/2004/07/Chinook.Entities.Queries")]
    [System.SerializableAttribute()]
    public partial class TracksVendidosQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComposerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MediaTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MillisecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtistId {
            get {
                return this.ArtistIdField;
            }
            set {
                if ((this.ArtistIdField.Equals(value) != true)) {
                    this.ArtistIdField = value;
                    this.RaisePropertyChanged("ArtistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Bytes {
            get {
                return this.BytesField;
            }
            set {
                if ((this.BytesField.Equals(value) != true)) {
                    this.BytesField = value;
                    this.RaisePropertyChanged("Bytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composer {
            get {
                return this.ComposerField;
            }
            set {
                if ((object.ReferenceEquals(this.ComposerField, value) != true)) {
                    this.ComposerField = value;
                    this.RaisePropertyChanged("Composer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaTypeId {
            get {
                return this.MediaTypeIdField;
            }
            set {
                if ((this.MediaTypeIdField.Equals(value) != true)) {
                    this.MediaTypeIdField = value;
                    this.RaisePropertyChanged("MediaTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaTypeName {
            get {
                return this.MediaTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaTypeNameField, value) != true)) {
                    this.MediaTypeNameField = value;
                    this.RaisePropertyChanged("MediaTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Milliseconds {
            get {
                return this.MillisecondsField;
            }
            set {
                if ((this.MillisecondsField.Equals(value) != true)) {
                    this.MillisecondsField = value;
                    this.RaisePropertyChanged("Milliseconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackId {
            get {
                return this.TrackIdField;
            }
            set {
                if ((this.TrackIdField.Equals(value) != true)) {
                    this.TrackIdField = value;
                    this.RaisePropertyChanged("TrackId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackName {
            get {
                return this.TrackNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackNameField, value) != true)) {
                    this.TrackNameField = value;
                    this.RaisePropertyChanged("TrackName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MantenimientoServices.IMantenimientosServices")]
    public interface IMantenimientosServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetData", ReplyAction="http://tempuri.org/IMantenimientosServices/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetData", ReplyAction="http://tempuri.org/IMantenimientosServices/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMantenimientosServices/GetDataUsingDataContractResponse")]
        Chinook.UI.WebForm.MantenimientoServices.CompositeType GetDataUsingDataContract(Chinook.UI.WebForm.MantenimientoServices.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IMantenimientosServices/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.CompositeType> GetDataUsingDataContractAsync(Chinook.UI.WebForm.MantenimientoServices.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetArtistByName", ReplyAction="http://tempuri.org/IMantenimientosServices/GetArtistByNameResponse")]
        Chinook.UI.WebForm.MantenimientoServices.Artist[] GetArtistByName(string artistName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetArtistByName", ReplyAction="http://tempuri.org/IMantenimientosServices/GetArtistByNameResponse")]
        System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.Artist[]> GetArtistByNameAsync(string artistName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetAll", ReplyAction="http://tempuri.org/IMantenimientosServices/GetAllResponse")]
        Chinook.UI.WebForm.MantenimientoServices.Album[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetAll", ReplyAction="http://tempuri.org/IMantenimientosServices/GetAllResponse")]
        System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.Album[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetById", ReplyAction="http://tempuri.org/IMantenimientosServices/GetByIdResponse")]
        Chinook.UI.WebForm.MantenimientoServices.Album[] GetById(int AlbumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetById", ReplyAction="http://tempuri.org/IMantenimientosServices/GetByIdResponse")]
        System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.Album[]> GetByIdAsync(int AlbumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetAlbunesVendidos", ReplyAction="http://tempuri.org/IMantenimientosServices/GetAlbunesVendidosResponse")]
        Chinook.UI.WebForm.MantenimientoServices.AlbunesVendidosQuery[] GetAlbunesVendidos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetAlbunesVendidos", ReplyAction="http://tempuri.org/IMantenimientosServices/GetAlbunesVendidosResponse")]
        System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.AlbunesVendidosQuery[]> GetAlbunesVendidosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/AddArtist", ReplyAction="http://tempuri.org/IMantenimientosServices/AddArtistResponse")]
        bool AddArtist(Chinook.UI.WebForm.MantenimientoServices.Artist artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/AddArtist", ReplyAction="http://tempuri.org/IMantenimientosServices/AddArtistResponse")]
        System.Threading.Tasks.Task<bool> AddArtistAsync(Chinook.UI.WebForm.MantenimientoServices.Artist artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/EditArtist", ReplyAction="http://tempuri.org/IMantenimientosServices/EditArtistResponse")]
        bool EditArtist(Chinook.UI.WebForm.MantenimientoServices.Artist artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/EditArtist", ReplyAction="http://tempuri.org/IMantenimientosServices/EditArtistResponse")]
        System.Threading.Tasks.Task<bool> EditArtistAsync(Chinook.UI.WebForm.MantenimientoServices.Artist artist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetArtistById", ReplyAction="http://tempuri.org/IMantenimientosServices/GetArtistByIdResponse")]
        Chinook.UI.WebForm.MantenimientoServices.Artist GetArtistById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetArtistById", ReplyAction="http://tempuri.org/IMantenimientosServices/GetArtistByIdResponse")]
        System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.Artist> GetArtistByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetTrackVendidos", ReplyAction="http://tempuri.org/IMantenimientosServices/GetTrackVendidosResponse")]
        Chinook.UI.WebForm.MantenimientoServices.TracksVendidosQuery[] GetTrackVendidos(string trackName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMantenimientosServices/GetTrackVendidos", ReplyAction="http://tempuri.org/IMantenimientosServices/GetTrackVendidosResponse")]
        System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.TracksVendidosQuery[]> GetTrackVendidosAsync(string trackName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMantenimientosServicesChannel : Chinook.UI.WebForm.MantenimientoServices.IMantenimientosServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MantenimientosServicesClient : System.ServiceModel.ClientBase<Chinook.UI.WebForm.MantenimientoServices.IMantenimientosServices>, Chinook.UI.WebForm.MantenimientoServices.IMantenimientosServices {
        
        public MantenimientosServicesClient() {
        }
        
        public MantenimientosServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MantenimientosServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MantenimientosServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MantenimientosServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Chinook.UI.WebForm.MantenimientoServices.CompositeType GetDataUsingDataContract(Chinook.UI.WebForm.MantenimientoServices.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.CompositeType> GetDataUsingDataContractAsync(Chinook.UI.WebForm.MantenimientoServices.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public Chinook.UI.WebForm.MantenimientoServices.Artist[] GetArtistByName(string artistName) {
            return base.Channel.GetArtistByName(artistName);
        }
        
        public System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.Artist[]> GetArtistByNameAsync(string artistName) {
            return base.Channel.GetArtistByNameAsync(artistName);
        }
        
        public Chinook.UI.WebForm.MantenimientoServices.Album[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.Album[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Chinook.UI.WebForm.MantenimientoServices.Album[] GetById(int AlbumId) {
            return base.Channel.GetById(AlbumId);
        }
        
        public System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.Album[]> GetByIdAsync(int AlbumId) {
            return base.Channel.GetByIdAsync(AlbumId);
        }
        
        public Chinook.UI.WebForm.MantenimientoServices.AlbunesVendidosQuery[] GetAlbunesVendidos() {
            return base.Channel.GetAlbunesVendidos();
        }
        
        public System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.AlbunesVendidosQuery[]> GetAlbunesVendidosAsync() {
            return base.Channel.GetAlbunesVendidosAsync();
        }
        
        public bool AddArtist(Chinook.UI.WebForm.MantenimientoServices.Artist artist) {
            return base.Channel.AddArtist(artist);
        }
        
        public System.Threading.Tasks.Task<bool> AddArtistAsync(Chinook.UI.WebForm.MantenimientoServices.Artist artist) {
            return base.Channel.AddArtistAsync(artist);
        }
        
        public bool EditArtist(Chinook.UI.WebForm.MantenimientoServices.Artist artist) {
            return base.Channel.EditArtist(artist);
        }
        
        public System.Threading.Tasks.Task<bool> EditArtistAsync(Chinook.UI.WebForm.MantenimientoServices.Artist artist) {
            return base.Channel.EditArtistAsync(artist);
        }
        
        public Chinook.UI.WebForm.MantenimientoServices.Artist GetArtistById(int id) {
            return base.Channel.GetArtistById(id);
        }
        
        public System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.Artist> GetArtistByIdAsync(int id) {
            return base.Channel.GetArtistByIdAsync(id);
        }
        
        public Chinook.UI.WebForm.MantenimientoServices.TracksVendidosQuery[] GetTrackVendidos(string trackName) {
            return base.Channel.GetTrackVendidos(trackName);
        }
        
        public System.Threading.Tasks.Task<Chinook.UI.WebForm.MantenimientoServices.TracksVendidosQuery[]> GetTrackVendidosAsync(string trackName) {
            return base.Channel.GetTrackVendidosAsync(trackName);
        }
    }
}
